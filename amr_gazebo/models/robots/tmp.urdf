<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from pioneer3dx_w_sensors.sdf.xacro | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<sdf version="1.8">
  <link name="base_link"/>
  <model name="pioneer3dx">
    <!--<link name="base_link"/>-->
    <link name="chassis">
      <pose>-0.045 0 0.148 0 0 0</pose>
      <inertial>
        <mass>3.5</mass>
        <inertia>
          <ixx>1</ixx>
          <iyy>1</iyy>
          <izz>1</izz>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyz>0</iyz>
        </inertia>
      </inertial>
      <visual name="chassis_visual">
        <geometry>
          <mesh>
            <uri>package://amr_robots_description/meshes/p3dx_meshes/chassis.stl</uri>
          </mesh>
        </geometry>
        <material>
          <ambient>0.851 0 0 1</ambient>
          <diffuse>0.851 0 0 1</diffuse>
        </material>
      </visual>
      <collision name="chassis_collision">
        <geometry>
          <box>
            <!--
              <size>0.45 0.35 0.35</size>
        -->
            <size>0.445 0.277 0.17</size>
          </box>
        </geometry>
      </collision>
    </link>
    <joint name="chassis_joint" type="fixed">
      <parent>base_link</parent>
      <child>chassis</child>
      <pose>0 0 0 0 0 0</pose>
    </joint>
    <!-- Top Plate -->
    <link name="top_plate">
      <pose>-0.045 0 0.234 0 0 0</pose>
      <inertial>
        <mass>0.01</mass>
        <inertia>
          <ixx>1</ixx>
          <iyy>1</iyy>
          <izz>1</izz>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyz>0</iyz>
        </inertia>
      </inertial>
      <visual name="top_plate_visual">
        <geometry>
          <mesh>
            <uri>package://amr_robots_description/meshes/p3dx_meshes/top.stl</uri>
          </mesh>
        </geometry>
        <material>
          <ambient>0.038 0.038 0.038 1</ambient>
          <diffuse>0.038 0.038 0.038 1</diffuse>
        </material>
      </visual>
    </link>
    <joint name="base_top_joint" type="fixed">
      <parent>chassis</parent>
      <child>top_plate</child>
      <pose>0 0 0 0 0 0</pose>
    </joint>
    <!-- Front Sonar -->
    <link name="front_sonar">
      <pose>-0.198 0 0.208 0 0 0</pose>
      <inertial>
        <mass>0.0001</mass>
        <inertia>
          <ixx>1</ixx>
          <iyy>1</iyy>
          <izz>1</izz>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyz>0</iyz>
        </inertia>
      </inertial>
      <visual name="front_sonar_visual">
        <geometry>
          <mesh>
            <uri>package://amr_robots_description/meshes/p3dx_meshes/front_sonar.stl</uri>
          </mesh>
        </geometry>
      </visual>
    </link>
    <joint name="base_front_joint" type="fixed">
      <parent>chassis</parent>
      <child>front_sonar</child>
      <pose>0 0 0 0 0 0</pose>
    </joint>
    <!-- Back Sonar -->
    <link name="back_sonar">
      <pose>0.109 0 0.209 0 0 0</pose>
      <inertial>
        <mass>0.0001</mass>
        <inertia>
          <ixx>1</ixx>
          <iyy>1</iyy>
          <izz>1</izz>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyz>0</iyz>
        </inertia>
      </inertial>
      <visual name="back_sonar_visual">
        <geometry>
          <mesh>
            <uri>package://amr_robots_description/meshes/p3dx_meshes/back_sonar.stl</uri>
          </mesh>
        </geometry>
      </visual>
    </link>
    <joint name="base_back_joint" type="fixed">
      <parent>chassis</parent>
      <child>back_sonar</child>
      <pose>0 0 0 0 0 0</pose>
    </joint>
    <!-- Caster Swivel -->
    <link name="caster_swivel">
      <pose>-0.185 0 0.055 0 0 0</pose>
      <inertial>
        <mass>0.1</mass>
        <inertia>
          <ixx>0.01</ixx>
          <iyy>0.01</iyy>
          <izz>0.01</izz>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyz>0</iyz>
        </inertia>
      </inertial>
      <visual name="caster_swivel_visual">
        <geometry>
          <mesh>
            <uri>package://amr_robots_description/meshes/p3dx_meshes/caster_swivel.stl</uri>
          </mesh>
        </geometry>
      </visual>
    </link>
    <joint name="base_caster_swivel_joint" type="revolute">
      <parent>base_link</parent>
      <child>caster_swivel</child>
      <axis>
        <xyz>0 0 1</xyz>
      </axis>
    </joint>
    <!-- Caster Wheel -->
    <link name="caster_wheel">
      <pose>-0.211 0 0.039 0 1.5707963267948966 1.5707963267948966</pose>
      <inertial>
        <mass>0.1</mass>
        <inertia>
          <ixx>0.0124</ixx>
          <iyy>0.0152</iyy>
          <izz>0.0117</izz>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyz>0</iyz>
        </inertia>
      </inertial>
      <visual name="caster_wheel_visual">
        <geometry>
          <cylinder>
            <radius>0.0375</radius>
            <length>0.01</length>
          </cylinder>
        </geometry>
      </visual>
      <collision name="collision">
        <geometry>
          <cylinder>
            <radius>0.0375</radius>
            <length>0.01</length>
          </cylinder>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>100000.0</mu>
              <mu2>100000.0</mu2>
              <slip1>0.0</slip1>
              <slip2>0.0</slip2>
            </ode>
          </friction>
        </surface>
      </collision>
      <inertial>
        <pose>0 0 0 1.5707963267948966 0 0</pose>
        <mass>0.2</mass>
        <inertia>
          <ixx>7.197916666666666e-05</ixx>
          <ixy>0.0</ixy>
          <ixz>0.0</ixz>
          <iyy>7.197916666666666e-05</iyy>
          <iyz>0.0</iyz>
          <izz>0.000140625</izz>
        </inertia>
      </inertial>
    </link>
    <joint name="caster_swivel_hubcap_joint" type="revolute">
      <parent>caster_swivel</parent>
      <child>caster_wheel</child>
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <lower>-1e16</lower>
          <upper>1e16</upper>
          <effort>10</effort>
          <velocity>10</velocity>
        </limit>
      </axis>
    </joint>
    <!-- Wheel Hub -->
    <link name="left_hub">
      <pose>0 0.17 0.12 0 0 0</pose>
      <visual name="left_hub_visual">
        <geometry>
          <mesh>
            <uri>package://amr_robots_description/meshes/p3dx_meshes/left_hubcap.stl</uri>
          </mesh>
        </geometry>
      </visual>
      <inertial>
        <pose>0 0 0 1.5707963267948966 0 0</pose>
        <mass>0.1</mass>
        <inertia>
          <ixx>0.0001358333333333333</ixx>
          <ixy>0.0</ixy>
          <ixz>0.0</ixz>
          <iyy>0.0001358333333333333</iyy>
          <iyz>0.0</iyz>
          <izz>0.00024499999999999994</izz>
        </inertia>
      </inertial>
    </link>
    <joint name="left_hub_joint" type="fixed">
      <parent>chassis</parent>
      <child>left_hub</child>
      <pose>0 0.17 0.12 0 0 0</pose>
      <!-- ???  -->
    </joint>
    <!-- Wheel -->
    <link name="left_wheel">
      <pose>0 0.17 0.12 0 1.5707963267948966 1.5707963267948966</pose>
      <!-- dit snap ik niet  -->
      <visual name="left_wheel_visual">
        <geometry>
          <!--
              <mesh>
                <uri>package://amr_robots_description/meshes/p3dx_meshes/${prefix}_wheel.stl</uri>
              </mesh>
                -->
          <cylinder>
            <radius>0.12</radius>
            <length>0.04</length>
          </cylinder>
        </geometry>
        <material>
          <ambient>0.038 0.038 0.038 1</ambient>
          <diffuse>0.038 0.038 0.038 1</diffuse>
        </material>
      </visual>
      <collision name="collision">
        <geometry>
          <cylinder>
            <radius>0.12</radius>
            <length>0.04</length>
          </cylinder>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>100000.0</mu>
              <mu2>100000.0</mu2>
              <slip1>0.0</slip1>
              <slip2>0.0</slip2>
            </ode>
          </friction>
        </surface>
      </collision>
      <inertial>
        <pose>0 0 0 1.5707963267948966 0 0</pose>
        <mass>1.5</mass>
        <inertia>
          <ixx>0.005599999999999999</ixx>
          <ixy>0.0</ixy>
          <ixz>0.0</ixz>
          <iyy>0.005599999999999999</iyy>
          <iyz>0.0</iyz>
          <izz>0.0108</izz>
        </inertia>
      </inertial>
    </link>
    <!-- Revolute joint for wheel rotation -->
    <joint name="left_wheel_joint" type="revolute">
      <parent>left_hub</parent>
      <child>left_wheel</child>
      <!-- Move wheel along x so it lines up properly with hub -->
      <pose>0 0 0 0 0 0</pose>
      <!-- Rotation axis along Y -->
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <lower>-1e16</lower>
          <upper>1e16</upper>
          <effort>10</effort>
          <velocity>10</velocity>
        </limit>
      </axis>
    </joint>
    <!-- Wheel Hub -->
    <link name="right_hub">
      <pose>0 -0.17 0.12 0 0 0</pose>
      <visual name="right_hub_visual">
        <geometry>
          <mesh>
            <uri>package://amr_robots_description/meshes/p3dx_meshes/right_hubcap.stl</uri>
          </mesh>
        </geometry>
      </visual>
      <inertial>
        <pose>0 0 0 1.5707963267948966 0 0</pose>
        <mass>0.1</mass>
        <inertia>
          <ixx>0.0001358333333333333</ixx>
          <ixy>0.0</ixy>
          <ixz>0.0</ixz>
          <iyy>0.0001358333333333333</iyy>
          <iyz>0.0</iyz>
          <izz>0.00024499999999999994</izz>
        </inertia>
      </inertial>
    </link>
    <joint name="right_hub_joint" type="fixed">
      <parent>chassis</parent>
      <child>right_hub</child>
      <pose>0 -0.17 0.12 0 0 0</pose>
      <!-- ???  -->
    </joint>
    <!-- Wheel -->
    <link name="right_wheel">
      <pose>0 -0.17 0.12 0 1.5707963267948966 1.5707963267948966</pose>
      <!-- dit snap ik niet  -->
      <visual name="right_wheel_visual">
        <geometry>
          <!--
              <mesh>
                <uri>package://amr_robots_description/meshes/p3dx_meshes/${prefix}_wheel.stl</uri>
              </mesh>
                -->
          <cylinder>
            <radius>0.12</radius>
            <length>0.04</length>
          </cylinder>
        </geometry>
        <material>
          <ambient>0.038 0.038 0.038 1</ambient>
          <diffuse>0.038 0.038 0.038 1</diffuse>
        </material>
      </visual>
      <collision name="collision">
        <geometry>
          <cylinder>
            <radius>0.12</radius>
            <length>0.04</length>
          </cylinder>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>100000.0</mu>
              <mu2>100000.0</mu2>
              <slip1>0.0</slip1>
              <slip2>0.0</slip2>
            </ode>
          </friction>
        </surface>
      </collision>
      <inertial>
        <pose>0 0 0 1.5707963267948966 0 0</pose>
        <mass>1.5</mass>
        <inertia>
          <ixx>0.005599999999999999</ixx>
          <ixy>0.0</ixy>
          <ixz>0.0</ixz>
          <iyy>0.005599999999999999</iyy>
          <iyz>0.0</iyz>
          <izz>0.0108</izz>
        </inertia>
      </inertial>
    </link>
    <!-- Revolute joint for wheel rotation -->
    <joint name="right_wheel_joint" type="revolute">
      <parent>right_hub</parent>
      <child>right_wheel</child>
      <!-- Move wheel along x so it lines up properly with hub -->
      <pose>0 0 0 0 0 0</pose>
      <!-- Rotation axis along Y -->
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <lower>-1e16</lower>
          <upper>1e16</upper>
          <effort>10</effort>
          <velocity>10</velocity>
        </limit>
      </axis>
    </joint>
    <!-- DiffDrive Plugin -->
    <plugin filename="gz-sim-diff-drive-system" name="gz::sim::systems::DiffDrive">
      <left_joint>left_wheel_joint</left_joint>
      <right_joint>right_wheel_joint</right_joint>
      <wheel_separation>0.34</wheel_separation>
      <wheel_radius>0.12</wheel_radius>
      <!--
        <base_frame>${base_link}</base_frame>
        <publish_rate>50</publish_rate>
        <publish_joint_states>true</publish_joint_states>
        -->
    </plugin>
    <!-- JointState Publisher -->
    <plugin filename="libgz-sim-joint-state-publisher-system.so" name="gz::sim::systems::JointStatePublisher">
      </plugin>
  </model>
</sdf>
